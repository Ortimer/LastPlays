/*!Fri Apr 17 2015 09:32:52 */
window.BggBuddy=Ember.Application.create({currentPath:""}),BggBuddy.ApplicationAdapter=DS.RESTAdapter.extend({}),BggBuddy.ApplicationController=Ember.Controller.extend({updateCurrentPath:function(){BggBuddy.set("currentPath",this.get("currentPath"))}.observes("model.currentPath")}),BaseGameController=Ember.ArrayController.extend({sortProperties:["name"],sortAscending:!0,orderedByName:function(){return"name"==this.get("sortProperties")[0]}.property("sortProperties"),orderedByPlays:function(){return"totalPlays"==this.get("sortProperties")[0]}.property("sortProperties"),actions:{sortBy:function(property){this.get("sortProperties")[0]==property?this.set("sortAscending",!this.get("sortAscending")):(this.set("sortProperties",[property]),this.set("sortAscending",!0))}}}),BggBuddy.BgguserGraphsController=BaseGameController.extend({gamesPerYearOptions:function(){var gamesData=[],gamesPerYearTemp=[];this.forEach(function(game){var year=game.get("yearpublished");gamesPerYearTemp[year]?gamesPerYearTemp[year].push(game):gamesPerYearTemp[year]=[game]}),$(gamesPerYearTemp).map(function(key,gameCount){if(gameCount){var singleYear={year:key.toString(),games:gameCount,gamesCount:gameCount.length};gamesData.push(singleYear)}});var options={element:"games-per-year-graph",data:gamesData,xkey:"year",ykeys:["gamesCount"],labels:["gamesCount"],hideHover:"true",hoverCallback:function(index,options,content,row){for(var hoverHtml='\n          <div class="morris-hover-row-label">'+row.year+'</div>\n          <div class="morris-hover-point" style="color: #0b62a4">\n            Games:\n          </div>',i=0;i<row.gamesCount&&3>i;i++)hoverHtml+='<div class="morris-hover-point" style="color: #0b62a4">'+row.games[i].get("name")+"<div>";return row.gamesCount>3&&(hoverHtml+='<div class="morris-hover-point" style="color: #0b62a4">... and '+(row.gamesCount-3)+" more<div>"),hoverHtml}};return options}.property(),avgRatingPerYearOptions:function(){var gamesData=[],gamesPerYearTemp=[];this.forEach(function(game){var year=game.get("yearpublished");null!=game.get("rating")&&0!=game.get("rating")&&(gamesPerYearTemp[year]?(gamesPerYearTemp[year].count++,gamesPerYearTemp[year].sumRating+=game.get("rating"),gamesPerYearTemp[year].sumRatingBgg+=game.get("ratingBgg")):gamesPerYearTemp[year]={count:1,sumRating:game.get("rating"),sumRatingBgg:game.get("ratingBgg")})}),$(gamesPerYearTemp).map(function(key,gameItem){if(gameItem){var singleYear={year:key.toString(),avgRating:Math.round(gameItem.sumRating/gameItem.count*100)/100,avgRatingBgg:Math.round(gameItem.sumRatingBgg/gameItem.count*100)/100};gamesData.push(singleYear)}});var options={element:"avgRating-per-year-graph",data:gamesData,xkey:"year",xLabels:"year",ykeys:["avgRating","avgRatingBgg"],labels:["Avg. Own Rating","Avg. Bgg Rating"],hideHover:"true"};return options}.property(),gamesPerPlayersOptions:function(){var gamesData=[],gamesPerPlayersTemp=[],RIDICULE_THRESHOLD=13,ridiculeLabel=RIDICULE_THRESHOLD+"+ Players";this.forEach(function(game){var minPlayers=game.get("minplayers"),maxPlayers=game.get("maxplayers");if(minPlayers&&maxPlayers){maxPlayers>=RIDICULE_THRESHOLD&&(maxPlayers=RIDICULE_THRESHOLD);for(var i=minPlayers;maxPlayers>=i;i++)gamesPerPlayersTemp[i]?gamesPerPlayersTemp[i].push(game):gamesPerPlayersTemp[i]=[game]}}),$(gamesPerPlayersTemp).map(function(key,gameCount){if(gameCount){var playerLabel=key.toString()+" Players";key==RIDICULE_THRESHOLD&&(playerLabel=ridiculeLabel);var singlePlayer={players:playerLabel,games:gameCount,gamesCount:gameCount.length};gamesData.push(singlePlayer)}});var options={element:"games-per-players-graph",data:gamesData,xkey:"players",ykeys:["gamesCount"],labels:["gamesCount"],hideHover:"true",hoverCallback:function(index,options,content,row){for(var hoverHtml='\n          <div class="morris-hover-row-label">'+row.players+'</div>\n          <div class="morris-hover-point" style="color: #0b62a4">\n            Games:\n          </div>',i=0;i<row.gamesCount&&3>i;i++)hoverHtml+='<div class="morris-hover-point" style="color: #0b62a4">'+row.games[i].get("name")+"<div>";return row.gamesCount>3&&(hoverHtml+='<div class="morris-hover-point" style="color: #0b62a4">... and '+(row.gamesCount-3)+" more<div>"),hoverHtml}};return options}.property()}),BggBuddy.BgguserHindexController=BaseGameController.extend({filter:0,filteredContent:function(){var filtered,self=this,filter=this.get("filter"),games=this.get("arrangedContent");switch(filter){case 1:filtered=games.filter(function(game){return game.get("totalPlays")>=self.get("hindexvalue")});break;case 2:filtered=games.filter(function(game){return 0==game.get("totalPlays")});break;case 0:default:filtered=games}return filtered}.property("arrangedContent","filter"),hindexvalue:function(){var model=this.get("model"),plays=[];model.forEach(function(game){if(0!=game.get("totalPlays"))for(var i=1;i<=game.get("totalPlays");i++)null==plays[i]&&(plays[i]=[]),plays[i].push(game)});for(var hindex=0,i=1;i<plays.length&&!(plays[i].length<i);i++)hindex++;return model.forEach(function(game){0==game.get("totalPlays")?game.set("customClass","noplay"):game.get("totalPlays")>=hindex&&game.set("customClass","hindex"),game.get("totalPlays")>=hindex-3&&game.get("totalPlays")<hindex+1&&game.set("hindexDiff",hindex+1-game.get("totalPlays"))}),hindex}.property("model.@each.totalPlays"),sumPlays:function(){var model=this.get("model");return model.reduce(function(previousValue,game){return previousValue+game.get("totalPlays")},0)}.property("model.@each.totalPlays"),unplayedGames:function(){var model=this.get("model");return model.reduce(function(previousValue,game){return 0==game.get("totalPlays")?previousValue+1:previousValue},0)}.property("model.@each.totalPlays"),actions:{setFilter:function(type){this.set("filter",type)}}}),BggBuddy.BgguserLastplaysController=BaseGameController.extend({orderedByDays:function(){return"lastPlay.date"==this.get("sortProperties")[0]}.property("sortProperties"),allPlaysLoaded:function(){var model=this.get("model");return model.reduce(function(previousValue,game){return previousValue&&null!=game.get("lastPlay.date")},!0)}.property("model.@each.lastPlay.date")}),BggBuddy.BgguserController=Ember.Controller.extend({needs:"application",showOutlet:function(){var currentPath=this.get("controllers.application.currentPath");return"bgguser.index"!=currentPath}.property("controllers.application.currentPath")}),Ember.Handlebars.helper("formatdate",function(value){var escaped=Handlebars.Utils.escapeExpression(value),formatedDate=moment(new Date(escaped)).utcOffset("+0").format("DD-MMM-YYYY");return new Ember.Handlebars.SafeString(formatedDate)}),BggBuddy.BggUser=DS.Model.extend({firstName:DS.attr("string"),lastName:DS.attr("string"),avatarLink:DS.attr("string")}),BggBuddy.Game=DS.Model.extend({bggUrl:DS.attr("string"),name:DS.attr("string"),image:DS.attr("string"),totalPlays:DS.attr("number"),yearpublished:DS.attr("number"),minplayers:DS.attr("number"),maxplayers:DS.attr("number"),playingtime:DS.attr("number"),numowned:DS.attr("number"),rating:DS.attr("number"),ratingBgg:DS.attr("number")}),BggBuddy.Lastplaygame=BggBuddy.Game.extend({lastPlay_id:DS.attr("string"),lastPlay:DS.belongsTo("play"),lastPlayWatcher:function(){var self=this,retryCount=1,loadJSON=function(){self.store.recordIsLoaded("play",self.get("lastPlay_id"))||$.getJSON("plays/"+self.get("lastPlay_id"),function(playData){var play=self.store.createRecord("play",playData.play);self.set("lastPlay",play)}).fail(function(){console.log(self.get("lastPlay_id")+" - Retry "+retryCount),retryCount++<=5&&loadJSON()})};loadJSON()}.observes("lastPlay_id"),lastPlayText:function(){var now=moment().utcOffset("+0"),then=moment(new Date(this.get("lastPlay.date"))).utcOffset("+0"),ms=now.diff(then,"milliseconds",!0),years=Math.floor(moment.duration(ms).asYears());now=now.subtract(years,"years"),ms=now.diff(then,"milliseconds",!0);var months=Math.floor(moment.duration(ms).asMonths());now=now.subtract(months,"months"),ms=now.diff(then,"milliseconds",!0),days=Math.floor(moment.duration(ms).asDays());var result="";return years>0&&(result+=years+" year(s) "),months>0&&(result+=months+" month(s) "),result+=days+" day(s)",result.trim()}.property("lastPlay.date")}),BggBuddy.Play=DS.Model.extend({bgg_id:DS.attr("number"),date:DS.attr("date"),location:DS.attr("string")}),BggBuddy.Menu=DS.Model.extend({messages:DS.hasMany("menuMessage"),tasks:DS.hasMany("menuTask"),sideMenuOptions:DS.hasMany("menuSideOption")}),BggBuddy.MenuMessage=DS.Model.extend({author:DS.attr("string"),time:DS.attr("string"),message:DS.attr("string")}),BggBuddy.MenuTask=DS.Model.extend({name:DS.attr("string"),progress:DS.attr("number"),barType:DS.attr("string")}),BggBuddy.MenuSideOption=DS.Model.extend({name:DS.attr("string"),icon:DS.attr("string"),link:DS.attr("string"),subMenus:DS.hasMany("menuSideSub")}),BggBuddy.MenuSideSub=DS.Model.extend({name:DS.attr("string"),link:DS.attr("string")}),BggBuddy.Router.map(function(){this.resource("root",{path:"/"}),this.resource("bgguser",{path:"/:bggUser"},function(){this.route("lastplays",{path:"lastplays"}),this.route("hindex",{path:"hindex"}),this.route("graphs",{path:"graphs"})})}),BggBuddy.ApplicationRoute=Ember.Route.extend({model:function(){return this.store.find("menu",1)}}),BggBuddy.BgguserGraphsRoute=Ember.Route.extend({model:function(){var bggUser=this.modelFor("bgguser");return this.store.find("game",{username:bggUser.get("id"),own:1})}}),BggBuddy.BgguserHindexRoute=Ember.Route.extend({model:function(){var bggUser=this.modelFor("bgguser");return this.store.find("game",{username:bggUser.get("id"),own:1})}}),BggBuddy.BgguserLastplaysRoute=Ember.Route.extend({model:function(){var bggUser=this.modelFor("bgguser");return this.store.find("lastplaygame",{username:bggUser.get("id"),own:1,played:1})}}),BggBuddy.BgguserRoute=Ember.Route.extend({model:function(params){return this.store.find("bggUser",params.bggUser)},afterModel:function(bggUser){null==bggUser&&this.transitionTo("root")}}),BggBuddy.MenuSerializer=DS.RESTSerializer.extend(DS.EmbeddedRecordsMixin,{attrs:{messages:{embedded:"always"},tasks:{embedded:"always"},sideMenuOptions:{embedded:"always"}}}),BggBuddy.MenuSideOptionSerializer=DS.RESTSerializer.extend(DS.EmbeddedRecordsMixin,{attrs:{subMenus:{embedded:"always"}}}),Ember.View.reopen({didInsertElement:function(){this._super(),Ember.run.scheduleOnce("afterRender",this,this.afterRenderEvent)},afterRenderEvent:function(){}}),BggBuddy.ApplicationView=Ember.View.extend({afterRenderEvent:function(){$(function(){function konamiInit(){locked||(locked=!0,konamiImg.animate({bottom:"0"},function(){$(this).animate({bottom:"-30px"},100,function(){var offset=$(this).position().left+700;$(this).delay(300).animate({right:offset},3500,function(){konamiImg=$("#konamiImg").css({bottom:"-700px",right:"0"}),locked=!1})})}))}var konamiImg=(new Konami(konamiInit),$("#konamiImg").css({position:"fixed",bottom:"-700px",right:"0",display:"block","z-index":10})),locked=!1}),$("#side-menu").metisMenu();var changeMenu=function(){var topOffset=50,width=window.innerWidth>0?window.innerWidth:screen.width;768>width?($("div.navbar-collapse").addClass("collapse"),topOffset=100):$("div.navbar-collapse").removeClass("collapse");var height=(window.innerHeight>0?window.innerHeight:screen.height)-1;height-=topOffset,1>height&&(height=1),height>topOffset&&$("#page-wrapper").css("min-height",height+"px")};$(changeMenu),$(window).resize(function(){changeMenu()})}}),BggBuddy.BgguserGraphsView=Ember.View.extend({afterRenderEvent:function(){var controller=this.get("controller");new Morris.Bar(controller.get("gamesPerYearOptions")),new Morris.Line(controller.get("avgRatingPerYearOptions")),new Morris.Bar(controller.get("gamesPerPlayersOptions"))}}),BggBuddy.RootView=Ember.View.extend({afterRenderEvent:function(){var self=this;BootstrapDialog.show({title:"Sign in",message:'<div id="bggUserModal" class="form-group"><label class="control-label" for="bggUserInput">BGG user</label><input id="bggUserInput" type="text" class="form-control" id="bggUserInput" placeholder="BGG User"><div>',closable:!1,buttons:[{label:"Sign in",hotkey:13,action:function(dialogRef){dialogRef.close()}}],onhide:function(dialogRef){var bggUser=dialogRef.getModalBody().find("input").val();return 0==$.trim(bggUser.toLowerCase()).length?(dialogRef.getModalBody().find("#bggUserModal").addClass("has-error"),!1):void self.get("controller").transitionToRoute("bgguser",$.trim(bggUser.toLowerCase()))}})}});